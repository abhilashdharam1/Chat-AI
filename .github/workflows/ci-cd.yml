name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job 1: Lint, Test, and Build
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          path: Chat-AI  # Check out code into a directory called Chat-AI

      # Node.js setup and install dependencies for backend
      - name: Set up Node.js for backend
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          
      - name: Install dependencies for backend
        run: npm install
        working-directory: ./Chat-AI/backend

      # Build React app (frontend)
      - name: Set up Node.js for frontend
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          
      - name: Install dependencies and build frontend
        run: |
          npm install
          npm run build
        working-directory: ./Chat-AI/frontend
      
  # Job 2: Deploy React to S3
  deploy_frontend:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          path: Chat-AI  # Check out code into a directory called Chat-AI

      # Set up Node.js and build frontend again for deployment
      - name: Set up Node.js for frontend
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          
      - name: Install dependencies and build frontend
        run: |
          npm install
          npm run build
        working-directory: ./Chat-AI/frontend

      # Deploy to S3
      - name: Deploy frontend to S3
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: '--acl public-read --delete'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SOURCE_DIR: './Chat-AI/frontend/build'
          DEST_DIR: 's3://${{ secrets.S3_BUCKET }}'

  # Job 3: Deploy Node.js backend to Elastic Beanstalk
  deploy_backend:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          path: Chat-AI  # Check out code into a directory called Chat-AI

      # Configure AWS CLI
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_EB_REGION }}

      # Install dependencies and build backend
      - name: Install dependencies for backend
        run: npm install
        working-directory: ./Chat-AI/backend

      # Zip backend for Elastic Beanstalk
      - name: Zip backend for Elastic Beanstalk
        run: zip -r backend.zip .
        working-directory: ./Chat-AI/backend

      # Deploy to Elastic Beanstalk
      - name: Deploy backend to Elastic Beanstalk
        run: |
          aws elasticbeanstalk create-application-version --application-name ${{ secrets.AWS_EB_NAME }} --version-label $GITHUB_SHA --source-bundle S3Bucket="${{ secrets.AWS_EB_REGION }}",S3Key="backend.zip"
          aws elasticbeanstalk update-environment --environment-name ${{ secrets.AWS_EB_NAME }} --version-label $GITHUB_SHA
